d1 <- SchoolfieldMPor(B0 = params_fit$estimate[1],
b = params_fit$estimate[2],
m = Masss1,
E = params_fit$estimate[3],
Ed = params_fit$estimate[4],
TempH = params_fit$estimate[5],
Temp = Tempe)
Temperature <- seq(from = 10, to = 45, length.out = length(d1))
Model1 <- data.frame(Temperature, d1)
}
return(Model1)
}
EvoraPreds <- predictions(Evora,EvoraFit)
ToledoPreds <- predictions(Toledo,ToledoFit)
PortoPreds <- predictions(Porto,PortoFit)
#EvoraCIs <- CIs(BootRunsE,Evora)
EvoraCIs <- read_csv("../Results/SchoolField/ModelCIs.csv")
EvoraCIs <- filter(EvoraCIs, genus == spp)
EvoraCIs <- filter(EvoraCIs, site == "Evora")
#ToledoCIs <- CIs(BootRunsT,Toledo)
ToledoCIs <- read_csv("../Results/SchoolField/ModelCIs.csv")
ToledoCIs <- filter(ToledoCIs, genus == spp)
ToledoCIs <- filter(ToledoCIs, site == "Toledo")
#PortoCIs <- CIs(BootRunsP,Porto)
PortoCIs <- read_csv("../Results/SchoolField/ModelCIs.csv")
PortoCIs <- filter(PortoCIs, genus == spp)
PortoCIs <- filter(PortoCIs, site == "Porto")
p <- ggplot() + theme_classic() +
geom_point(data = Evora, aes(x=chamber.T,y=LogC), colour = "red", size = I(3), alpha = 0.4) +
geom_line(data = EvoraPreds, aes(x=Temperature,y=d1), colour = "red", size = I(2), alpha = 1)+
geom_ribbon(aes(Temperature, ymin = conf_lower, ymax = conf_upper), EvoraCIs, fill = 'red', alpha = 0.3) +
geom_point(data = Toledo, aes(x=chamber.T,y=LogC), colour = "blue", size = I(3), alpha = 0.4) +
geom_line(data = ToledoPreds, aes(x=Temperature,y=d1), colour = "blue", size = I(2), alpha = 1)+
geom_ribbon(aes(Temperature, ymin = conf_lower, ymax = conf_upper), ToledoCIs, fill = 'blue', alpha = 0.3) +
geom_point(data = Porto, aes(x=chamber.T,y=LogC), colour = "purple", size = I(3), alpha = 0.4) +
geom_line(data = PortoPreds, aes(x=Temperature,y=d1), colour = "purple", size = I(2), alpha = 1)+
geom_ribbon(aes(Temperature, ymin = conf_lower, ymax = conf_upper), PortoCIs, fill = 'purple', alpha = 0.3) +
theme(axis.text=element_text(size=32)) + theme(axis.title = element_blank())
p
p <- ggplot() + theme_classic() +
geom_point(data = Evora, aes(x=chamber.T,y=LogC), colour = "red", size = I(3), alpha = 0.4) +
geom_line(data = EvoraPreds, aes(x=Temperature,y=d1), colour = "red", size = I(2), alpha = 1)+
geom_ribbon(aes(Temperature, ymin = conf_lower, ymax = conf_upper), EvoraCIs, fill = 'red', alpha = 0.3) +
geom_point(data = Toledo, aes(x=chamber.T,y=LogC), colour = "blue", size = I(3), alpha = 0.4) +
geom_line(data = ToledoPreds, aes(x=Temperature,y=d1), colour = "blue", size = I(2), alpha = 1)+
geom_ribbon(aes(Temperature, ymin = conf_lower, ymax = conf_upper), ToledoCIs, fill = 'blue', alpha = 0.3) +
geom_point(data = Porto, aes(x=chamber.T,y=LogC), colour = "purple", size = I(3), alpha = 0.4) +
geom_line(data = PortoPreds, aes(x=Temperature,y=d1), colour = "purple", size = I(2), alpha = 1)+
geom_ribbon(aes(Temperature, ymin = conf_lower, ymax = conf_upper), PortoCIs, fill = 'purple', alpha = 0.3) +
theme(axis.text=element_text(size=32)) + theme(axis.title = element_blank())
p
tiff(paste0("../Results/SchoolField/Boots/",spp,"All.tiff"), width = 25, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p)
dev.off()
rm(list = ls())
dev.off()
library(plyr)
library(ggplot2)
library(gridExtra)
setwd("~/Documents/My Papers/Open/Git-Locomotion-metabolism-and-acclimation/Code/")
dat <- read.csv("../Results/SchoolField/EaB0.csv")
#dat$Site.April.mean.temp <- round(dat$Site.April.mean.temp, digits = 1)
#dat[12,5]<-"11.0"
#dat$Site.April.mean.temp <- as.factor(dat$Site.April.mean.temp)
#dat$Site.April.mean.temp <- factor(dat$Site.April.mean.temp, levels= c("7.3", "11.0", "12.7", "13.5", "14.9", "16.2"))
dat$site <- factor(dat$site, levels = c("Toledo","Porto","Evora"))
colours <- c("blue","purple","red")
p <- ggplot(data = dat, aes(x = site, y = B0_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=25),axis.title.x = element_blank()) + ylab(expression(B[0](mu~mol/mgL))) +
xlab("Site") + theme(axis.text=element_text(size=22))
p <- p + geom_errorbar(aes(ymin = B0_end - 1*B0_se, ymax = B0_end + 1*B0_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) #+ theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p1 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 22))
p1
p <- ggplot(data = dat, aes(x = site, y = Ea_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=25), axis.title.x = element_blank()) + ylab("E (eV)") +
theme(axis.text=element_text(size=22))
p <- p + geom_errorbar(aes(ymin = Ea_end - 1.645*Ea_se, ymax = Ea_end + 1.645*Ea_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p2 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 22))
p2
p <- ggplot(data = dat, aes(x = site, y = (Tpk_end-273.15))) + geom_point(aes(color=Genus, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=22)) + ylab("Tpk (?C)") +
xlab("Site") + theme(axis.text=element_text(size=15))
p <- p + geom_errorbar(aes(ymin = (Tpk_end - 1.96*Tpk_se)-273.15, ymax = (Tpk_end + 1.96*Tpk_se)-273.15, color = Genus, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p3 <- p + facet_grid( .~ Genus, scales = "free", space = "free")
p3
p <- ggplot(data = dat, aes(x = site, y = Ea_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=25), axis.title.x = element_blank()) + ylab("E (eV)") +
theme(axis.text=element_text(size=22))
p <- p + geom_errorbar(aes(ymin = Ea_end - 1.645*Ea_se, ymax = Ea_end + 1.645*Ea_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p2 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 22))
p2
p1
p <- ggplot(data = dat, aes(x = site, y = B0_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=25),axis.title.x = element_blank()) + ylab(expression(B[0](mu~mol/mgL))) +
xlab("Site") + theme(axis.text=element_text(size=22))
p <- p + geom_errorbar(aes(ymin = B0_end - 1*B0_se, ymax = B0_end + 1*B0_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p1 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 22))
p1
p <- ggplot(data = dat, aes(x = site, y = B0_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=25),axis.title.x = element_blank()) + ylab(expression(B[0](mu~mol/mgL))) +
xlab("Site") + theme(axis.text=element_text(size=22))
p <- p + geom_errorbar(aes(ymin = B0_end - 1*B0_se, ymax = B0_end + 1*B0_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none", axis.text=element_text(size=32))
p <- p + scale_colour_manual(name="Genus", values=colours)
p1 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 22))
p1
p <- ggplot(data = dat, aes(x = site, y = B0_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=25),axis.title.x = element_blank()) + ylab(expression(B[0](mu~mol/mgL))) +
xlab("Site") + theme(axis.text=element_text(size=22))
p <- p + geom_errorbar(aes(ymin = B0_end - 1*B0_se, ymax = B0_end + 1*B0_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none", axis.text=element_text(size=32))
p <- p + scale_colour_manual(name="Genus", values=colours)
p1 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 32))
p1
p <- ggplot(data = dat, aes(x = site, y = Ea_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=25), axis.title.x = element_blank()) + ylab("E (eV)") +
theme(axis.text=element_text(size=22))
p <- p + geom_errorbar(aes(ymin = Ea_end - 1.645*Ea_se, ymax = Ea_end + 1.645*Ea_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p2 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 32))
p2
p <- ggplot(data = dat, aes(x = site, y = B0_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=35),axis.title.x = element_blank()) + ylab(expression(B[0](mu~mol/mgL))) +
xlab("Site") + theme(axis.text=element_text(size=22))
p <- p + geom_errorbar(aes(ymin = B0_end - 1*B0_se, ymax = B0_end + 1*B0_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none", axis.text=element_text(size=32))
p <- p + scale_colour_manual(name="Genus", values=colours)
p1 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 32))
p1
p <- ggplot(data = dat, aes(x = site, y = Ea_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=35), axis.title.x = element_blank()) + ylab("E (eV)") +
theme(axis.text=element_text(size=22))
p <- p + geom_errorbar(aes(ymin = Ea_end - 1.645*Ea_se, ymax = Ea_end + 1.645*Ea_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p2 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 32))
p2
p <- ggplot(data = dat, aes(x = site, y = B0_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=35),axis.title.x = element_blank()) + ylab(expression(B[0](mu~mol/mgL))) +
xlab("Site") + theme(axis.text=element_text(size=32))
p <- p + geom_errorbar(aes(ymin = B0_end - 1*B0_se, ymax = B0_end + 1*B0_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p1 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 32))
p1
p <- ggplot(data = dat, aes(x = site, y = Ea_end)) + geom_point(aes(color=site, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=35), axis.title.x = element_blank()) + ylab("E (eV)") +
theme(axis.text=element_text(size=32))
p <- p + geom_errorbar(aes(ymin = Ea_end - 1.645*Ea_se, ymax = Ea_end + 1.645*Ea_se, color = site, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p2 <- p + facet_grid( .~ Genus, scales = "free", space = "free") + theme(strip.text.x = element_text(size = 32))
p2
tiff("../Results/SchoolField/B0Points.tiff", width = 25, height = 15, units = 'cm', res = 300, compression = 'lzw')
print(p1)
dev.off()
tiff("../Results/SchoolField/EaPoints.tiff", width = 25, height = 15, units = 'cm', res = 300, compression = 'lzw')
print(p2)
dev.off()
tiff("../Results/SchoolField/B0Points.tiff", width = 35, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p1)
dev.off()
tiff("../Results/SchoolField/B0Points.tiff", width = 40, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p1)
dev.off()
tiff("../Results/SchoolField/EaPoints.tiff", width = 40, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p2)
dev.off()
tiff("../Results/SchoolField/B0Points.tiff", width = 40, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p1)
dev.off()
tiff("../Results/SchoolField/EaPoints.tiff", width = 40, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p2)
dev.off()
rm(list = ls())
dev.off()
library(minpack.lm)
library(tidyverse)
#library(gridExtra)
setwd("~/Documents/My Papers/Open/Git-Locomotion-metabolism-and-acclimation/Code/")
source("DataClean.R")
rm(list=setdiff(ls(), c("chir","dipt","strio","k")))
source("Schoolfields2.R")
source("further_models_fun.R")
source("multiplot.R")
Chirpreds <- read_csv("../Results/SchoolField/Boots/Chironomus/ChirPreds.csv")
Diptpreds <- read_csv("../Results/SchoolField/Boots/Cloeon/DiptPreds.csv")
Striopreds <- read_csv("../Results/SchoolField/Boots/Sympetrum/StrioPreds.csv")
#values <- read.csv("../Results/SchoolField/ModelParameters.csv")
#values$site <- factor(values$site, levels = c("Toledo","Porto","Evora"))
getmass <- function(spp1,i) {
Tempe <- seq(from=283.15, to = 318.15, by = 0.5)
mass <- seq(from = as.numeric(min(spp1[spp1$site == i,]$Mass)), to = as.numeric(max(spp1[spp1$site == i,]$Mass)), length.out = length(Tempe))
return(mass)
}
Chirpreds$mass <- c(getmass(chir,"Evora"),getmass(chir,"Toledo"),getmass(chir,"Porto"))
Diptpreds$mass <- c(getmass(dipt,"Evora"),getmass(dipt,"Toledo"),getmass(dipt,"Porto"))
Striopreds$mass <- c(getmass(strio,"Evora"),getmass(strio,"Toledo"),getmass(strio,"Porto"))
Chirpreds$speed <- Vopt2(power(Chirpreds$d1),mean(Chirpreds$mass))
Chirpreds$speedupper <- Vopt2(power(Chirpreds$conf_upper),mean(Chirpreds$mass))
Chirpreds$speedlower <- Vopt2(power(Chirpreds$conf_lower),mean(Chirpreds$mass))
Diptpreds$speed <- Vopt2(power(Diptpreds$d1),mean(Diptpreds$mass))
Diptpreds$speedupper <- Vopt2(power(Diptpreds$conf_upper),mean(Diptpreds$mass))
Diptpreds$speedlower <- Vopt2(power(Diptpreds$conf_lower),mean(Diptpreds$mass))
Striopreds$speed <- Vopt2(power(Striopreds$d1),mean(Striopreds$mass))
Striopreds$speedupper <- Vopt2(power(Striopreds$conf_upper),mean(Striopreds$mass))
Striopreds$speedlower <- Vopt2(power(Striopreds$conf_lower),mean(Striopreds$mass))
Chirpreds$Temperature <- rep(seq(from=10, to = 45, by = 0.5),3)
Diptpreds$Temperature <- rep(seq(from=10, to = 45, by = 0.5),3)
Striopreds$Temperature <- rep(seq(from=10, to = 45, by = 0.5),3)
plotsspeeds <- function(pred,prey,loc,preycol) {
PredS <- filter(pred, site == loc)
PreyS <- filter(prey, site == loc)
p <- ggplot() + theme_classic() + #ylim(0,1.5) +
theme(axis.title=element_text(size=22)) +
geom_line(data = PreyS, aes(x = Temperature, y = speed), colour = preycol, size = I(2), alpha = 0.7) +
geom_ribbon(aes(Temperature, ymin = speedlower, ymax = speedupper), fill = preycol, PreyS, alpha = 0.3) +
xlab(expression(paste("Temperature (", degree, C, ")"))) +
ylab(expression(paste("Speed (m/s)"))) +
geom_line(data = PredS, aes(x = Temperature, y = speed), colour = "orange", size = I(2), alpha = 0.7) +
geom_ribbon(aes(Temperature, ymin = speedlower, ymax = speedupper), fill = "orange", PredS, alpha = 0.3) +
theme(axis.title.x=element_blank()) + theme(legend.position = "none") + theme(axis.title.y=element_blank()) +
theme(axis.text=element_text(size = 22))
return(p)
}
pTolCh <- plotsspeeds(Striopreds,Chirpreds,"Toledo","lightgreen")+
geom_rect(aes(xmin=10, xmax=35, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pPorCh <- plotsspeeds(Striopreds,Chirpreds,"Porto","lightgreen") +
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="purple", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pEvoCh <- plotsspeeds(Striopreds,Chirpreds,"Evora","lightgreen") +
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pTolCl <- plotsspeeds(Striopreds,Diptpreds,"Toledo","darkgreen")+
geom_rect(aes(xmin=10, xmax=35, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pPorCl <- plotsspeeds(Striopreds,Diptpreds,"Porto","darkgreen") +
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="purple", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pEvoCl <- plotsspeeds(Striopreds,Diptpreds,"Evora","darkgreen") +
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
multiplot(pTolCh, pTolCl, pPorCh, pPorCl, pEvoCh, pEvoCl, cols = 3)
plotsspeeds <- function(pred,prey,loc,preycol) {
PredS <- filter(pred, site == loc)
PreyS <- filter(prey, site == loc)
p <- ggplot() + theme_classic() + #ylim(0,1.5) +
theme(axis.title=element_text(size=22)) +
geom_line(data = PreyS, aes(x = Temperature, y = speed), colour = preycol, size = I(2), alpha = 0.7) +
geom_ribbon(aes(Temperature, ymin = speedlower, ymax = speedupper), fill = preycol, PreyS, alpha = 0.3) +
xlab(expression(paste("Temperature (", degree, C, ")"))) +
ylab(expression(paste("Speed (m/s)"))) +
geom_line(data = PredS, aes(x = Temperature, y = speed), colour = "orange", size = I(2), alpha = 0.7) +
geom_ribbon(aes(Temperature, ymin = speedlower, ymax = speedupper), fill = "orange", PredS, alpha = 0.3) +
theme(axis.title.x=element_blank()) + theme(legend.position = "none") + theme(axis.title.y=element_blank()) +
theme(axis.text=element_text(size = 32))
return(p)
}
pTolCh <- plotsspeeds(Striopreds,Chirpreds,"Toledo","lightgreen")+
geom_rect(aes(xmin=10, xmax=35, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pPorCh <- plotsspeeds(Striopreds,Chirpreds,"Porto","lightgreen") +
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="purple", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pEvoCh <- plotsspeeds(Striopreds,Chirpreds,"Evora","lightgreen") +
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pTolCl <- plotsspeeds(Striopreds,Diptpreds,"Toledo","darkgreen")+
geom_rect(aes(xmin=10, xmax=35, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pPorCl <- plotsspeeds(Striopreds,Diptpreds,"Porto","darkgreen") +
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="purple", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
pEvoCl <- plotsspeeds(Striopreds,Diptpreds,"Evora","darkgreen") +
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2) + ylim(-0.15,0.05)
multiplot(pTolCh, pTolCl, pPorCh, pPorCl, pEvoCh, pEvoCl, cols = 3)
tiff("../Results/SchoolField/combinedV0.tiff", width = 60, height = 30, units = 'cm', res = 300, compression = 'lzw')
multiplot(pTolCh, pTolCl, pPorCh, pPorCl, pEvoCh, pEvoCl, cols = 3)
dev.off()
rm(list = ls())
dev.off()
library(tidyverse)
setwd("~/Documents/My Papers/Open/Git-Locomotion-metabolism-and-acclimation/Code/")
source("DataClean.R")
rm(list=setdiff(ls(), c("chir","dipt","strio","k")))
source("multiplot.R")
source("further_models_fun.R")
params <- read_csv("../Results/SchoolField/ModelParameters.csv")
Temp <- seq(from = 273.15, to = 318.15, length.out = 200)
Pd2 <- 0.68
Pd3 <- 1.05
d0 <- 0.3
i <- 1
c <- 1
searchrates <- function(loc) {
if (loc == "Toledo") {
Tref <- 14.6 + 273.15
}
if (loc == "Porto") {
Tref <- 16.9 + 273.15
}
if (loc == "Evora") {
Tref <- 17.3 + 273.15
}
PreyParams1 <- params %>% filter(site==loc) %>% filter(genus=="Chironomus")
PreyParams2 <- params %>% filter(site==loc) %>% filter(genus=="Cloeon")
PredParams <- params %>% filter(site==loc) %>% filter(genus=="Sympetrum")
mr1 <- mean(chir$Mass)
mr2 <- mean(dipt$Mass)
mc <- mean(strio$Mass)
bc <- PredParams[PredParams$term=="b",]$estimate
br1 <- PreyParams1[PreyParams1$term=="b",]$estimate
br2 <- PreyParams2[PreyParams2$term=="b",]$estimate
Ec <- PredParams[PredParams$term=="E",]$estimate
Er1 <- PreyParams1[PreyParams1$term=="E",]$estimate
Er2 <- PreyParams2[PreyParams2$term=="E",]$estimate
v0c <- Vopt2(power(PredParams[PredParams$term=="B0",]$estimate),mc)
v0r1 <- Vopt2(power(PreyParams1[PreyParams1$term=="B0",]$estimate),mr1)
v0r2 <- Vopt2(power(PreyParams2[PreyParams2$term=="B0",]$estimate),mr2)
sessile2D <- sessile.search.rate.2D(b0c = v0c, mc = mc, Ec = Ec, bc = bc, mr = mr1, Temp = Temp, d0 = d0, Pd = Pd2, i = i, c = c, Tref = Tref)
active3D <- active.search.rate.3D(b0c = v0c, mc = mc, Ec = Ec, bc = bc, b0r = v0r2, mr = mr2, Er = Er2, br = br2, Temp = Temp, d0 = d0, Pd = Pd3, i = i, c = c, Tref = Tref)
Temperature <- Temp - 273.15
strats <- data.frame(Temperature,sessile2D,active3D)
p <- ggplot() + theme_classic() +
theme(axis.text = element_text(size=22)) +
xlab(expression(paste("Temperature (", degree, C, ")"))) +
ylab(expression(paste("Search rate")))
p <- p + geom_line(data = strats, aes(x = Temperature, y = sessile2D, colour = "Sessile 2D"), size = I(1), alpha = 1)
p <- p + geom_line(data = strats, aes(x = Temperature, y = active3D, colour = "Active 3D"), size = I(1), alpha = 1)
p <- p + xlim(10,45) + scale_color_manual(values=c("#FF5C4D","#DAD870"), name = "Strategy") + ylim(0,0.05)
p <- p + theme(axis.title.x=element_blank()) + theme(legend.position = "none") + theme(axis.title.y=element_blank())
p <- p + theme(legend.text = element_text(size = 22),legend.title = element_text(size=24))
return(p)
}
pTol <- searchrates("Toledo")+
geom_rect(aes(xmin=10, xmax=35, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2)
pPor <- searchrates("Porto")+
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="purple", size = I(2), alpha = 0.2) +
theme(axis.text.y = element_blank())
pEvo <- searchrates("Evora")+
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2)+
theme(axis.text.y = element_blank())
multiplot(pTol, pPor, pEvo, cols = 3)
searchrates <- function(loc) {
if (loc == "Toledo") {
Tref <- 14.6 + 273.15
}
if (loc == "Porto") {
Tref <- 16.9 + 273.15
}
if (loc == "Evora") {
Tref <- 17.3 + 273.15
}
PreyParams1 <- params %>% filter(site==loc) %>% filter(genus=="Chironomus")
PreyParams2 <- params %>% filter(site==loc) %>% filter(genus=="Cloeon")
PredParams <- params %>% filter(site==loc) %>% filter(genus=="Sympetrum")
mr1 <- mean(chir$Mass)
mr2 <- mean(dipt$Mass)
mc <- mean(strio$Mass)
bc <- PredParams[PredParams$term=="b",]$estimate
br1 <- PreyParams1[PreyParams1$term=="b",]$estimate
br2 <- PreyParams2[PreyParams2$term=="b",]$estimate
Ec <- PredParams[PredParams$term=="E",]$estimate
Er1 <- PreyParams1[PreyParams1$term=="E",]$estimate
Er2 <- PreyParams2[PreyParams2$term=="E",]$estimate
v0c <- Vopt2(power(PredParams[PredParams$term=="B0",]$estimate),mc)
v0r1 <- Vopt2(power(PreyParams1[PreyParams1$term=="B0",]$estimate),mr1)
v0r2 <- Vopt2(power(PreyParams2[PreyParams2$term=="B0",]$estimate),mr2)
sessile2D <- sessile.search.rate.2D(b0c = v0c, mc = mc, Ec = Ec, bc = bc, mr = mr1, Temp = Temp, d0 = d0, Pd = Pd2, i = i, c = c, Tref = Tref)
active3D <- active.search.rate.3D(b0c = v0c, mc = mc, Ec = Ec, bc = bc, b0r = v0r2, mr = mr2, Er = Er2, br = br2, Temp = Temp, d0 = d0, Pd = Pd3, i = i, c = c, Tref = Tref)
Temperature <- Temp - 273.15
strats <- data.frame(Temperature,sessile2D,active3D)
p <- ggplot() + theme_classic() +
theme(axis.text = element_text(size=32)) +
xlab(expression(paste("Temperature (", degree, C, ")"))) +
ylab(expression(paste("Search rate")))
p <- p + geom_line(data = strats, aes(x = Temperature, y = sessile2D, colour = "Sessile 2D"), size = I(1), alpha = 1)
p <- p + geom_line(data = strats, aes(x = Temperature, y = active3D, colour = "Active 3D"), size = I(1), alpha = 1)
p <- p + xlim(10,45) + scale_color_manual(values=c("#FF5C4D","#DAD870"), name = "Strategy") + ylim(0,0.05)
p <- p + theme(axis.title.x=element_blank()) + theme(legend.position = "none") + theme(axis.title.y=element_blank())
p <- p + theme(legend.text = element_text(size = 22),legend.title = element_text(size=24))
return(p)
}
pTol <- searchrates("Toledo")+
geom_rect(aes(xmin=10, xmax=35, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2)
pPor <- searchrates("Porto")+
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="purple", size = I(2), alpha = 0.2) +
theme(axis.text.y = element_blank())
pEvo <- searchrates("Evora")+
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2)+
theme(axis.text.y = element_blank())
multiplot(pTol, pPor, pEvo, cols = 3)
tiff("../Results/SchoolField/combineda2.tiff", width = 60, height = 20, units = 'cm', res = 300, compression = 'lzw')
multiplot(pTol, pPor, pEvo, cols = 3)
dev.off()
searchrates <- function(loc) {
if (loc == "Toledo") {
Tref <- 14.6 + 273.15
}
if (loc == "Porto") {
Tref <- 16.9 + 273.15
}
if (loc == "Evora") {
Tref <- 17.3 + 273.15
}
PreyParams1 <- params %>% filter(site==loc) %>% filter(genus=="Chironomus")
PreyParams2 <- params %>% filter(site==loc) %>% filter(genus=="Cloeon")
PredParams <- params %>% filter(site==loc) %>% filter(genus=="Sympetrum")
mr1 <- mean(chir$Mass)
mr2 <- mean(dipt$Mass)
mc <- mean(strio$Mass)
bc <- PredParams[PredParams$term=="b",]$estimate
br1 <- PreyParams1[PreyParams1$term=="b",]$estimate
br2 <- PreyParams2[PreyParams2$term=="b",]$estimate
Ec <- PredParams[PredParams$term=="E",]$estimate
Er1 <- PreyParams1[PreyParams1$term=="E",]$estimate
Er2 <- PreyParams2[PreyParams2$term=="E",]$estimate
v0c <- Vopt2(power(PredParams[PredParams$term=="B0",]$estimate),mc)
v0r1 <- Vopt2(power(PreyParams1[PreyParams1$term=="B0",]$estimate),mr1)
v0r2 <- Vopt2(power(PreyParams2[PreyParams2$term=="B0",]$estimate),mr2)
sessile2D <- sessile.search.rate.2D(b0c = v0c, mc = mc, Ec = Ec, bc = bc, mr = mr1, Temp = Temp, d0 = d0, Pd = Pd2, i = i, c = c, Tref = Tref)
active3D <- active.search.rate.3D(b0c = v0c, mc = mc, Ec = Ec, bc = bc, b0r = v0r2, mr = mr2, Er = Er2, br = br2, Temp = Temp, d0 = d0, Pd = Pd3, i = i, c = c, Tref = Tref)
Temperature <- Temp - 273.15
strats <- data.frame(Temperature,sessile2D,active3D)
p <- ggplot() + theme_classic() +
theme(axis.text = element_text(size=32)) +
xlab(expression(paste("Temperature (", degree, C, ")"))) +
ylab(expression(paste("Search rate")))
p <- p + geom_line(data = strats, aes(x = Temperature, y = sessile2D, colour = "Sessile 2D"), size = I(2), alpha = 1)
p <- p + geom_line(data = strats, aes(x = Temperature, y = active3D, colour = "Active 3D"), size = I(2), alpha = 1)
p <- p + xlim(10,45) + scale_color_manual(values=c("#FF5C4D","#DAD870"), name = "Strategy") + ylim(0,0.05)
p <- p + theme(axis.title.x=element_blank()) + theme(legend.position = "none") + theme(axis.title.y=element_blank())
p <- p + theme(legend.text = element_text(size = 22),legend.title = element_text(size=24))
return(p)
}
pTol <- searchrates("Toledo")+
geom_rect(aes(xmin=10, xmax=35, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2)
pPor <- searchrates("Porto")+
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="purple", size = I(2), alpha = 0.2) +
theme(axis.text.y = element_blank())
pEvo <- searchrates("Evora")+
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2)+
theme(axis.text.y = element_blank())
multiplot(pTol, pPor, pEvo, cols = 3)
tiff("../Results/SchoolField/combineda2.tiff", width = 60, height = 20, units = 'cm', res = 300, compression = 'lzw')
multiplot(pTol, pPor, pEvo, cols = 3)
dev.off()
searchrates <- function(loc) {
if (loc == "Toledo") {
Tref <- 14.6 + 273.15
}
if (loc == "Porto") {
Tref <- 16.9 + 273.15
}
if (loc == "Evora") {
Tref <- 17.3 + 273.15
}
PreyParams1 <- params %>% filter(site==loc) %>% filter(genus=="Chironomus")
PreyParams2 <- params %>% filter(site==loc) %>% filter(genus=="Cloeon")
PredParams <- params %>% filter(site==loc) %>% filter(genus=="Sympetrum")
mr1 <- mean(chir$Mass)
mr2 <- mean(dipt$Mass)
mc <- mean(strio$Mass)
bc <- PredParams[PredParams$term=="b",]$estimate
br1 <- PreyParams1[PreyParams1$term=="b",]$estimate
br2 <- PreyParams2[PreyParams2$term=="b",]$estimate
Ec <- PredParams[PredParams$term=="E",]$estimate
Er1 <- PreyParams1[PreyParams1$term=="E",]$estimate
Er2 <- PreyParams2[PreyParams2$term=="E",]$estimate
v0c <- Vopt2(power(PredParams[PredParams$term=="B0",]$estimate),mc)
v0r1 <- Vopt2(power(PreyParams1[PreyParams1$term=="B0",]$estimate),mr1)
v0r2 <- Vopt2(power(PreyParams2[PreyParams2$term=="B0",]$estimate),mr2)
sessile2D <- sessile.search.rate.2D(b0c = v0c, mc = mc, Ec = Ec, bc = bc, mr = mr1, Temp = Temp, d0 = d0, Pd = Pd2, i = i, c = c, Tref = Tref)
active3D <- active.search.rate.3D(b0c = v0c, mc = mc, Ec = Ec, bc = bc, b0r = v0r2, mr = mr2, Er = Er2, br = br2, Temp = Temp, d0 = d0, Pd = Pd3, i = i, c = c, Tref = Tref)
Temperature <- Temp - 273.15
strats <- data.frame(Temperature,sessile2D,active3D)
p <- ggplot() + theme_classic() +
theme(axis.text = element_text(size=32)) +
xlab(expression(paste("Temperature (", degree, C, ")"))) +
ylab(expression(paste("Search rate")))
p <- p + geom_line(data = strats, aes(x = Temperature, y = sessile2D, colour = "Sessile 2D"), size = I(3), alpha = 1)
p <- p + geom_line(data = strats, aes(x = Temperature, y = active3D, colour = "Active 3D"), size = I(3), alpha = 1)
p <- p + xlim(10,45) + scale_color_manual(values=c("#FF5C4D","#DAD870"), name = "Strategy") + ylim(0,0.05)
p <- p + theme(axis.title.x=element_blank()) + theme(legend.position = "none") + theme(axis.title.y=element_blank())
p <- p + theme(legend.text = element_text(size = 22),legend.title = element_text(size=24))
return(p)
}
pTol <- searchrates("Toledo")+
geom_rect(aes(xmin=10, xmax=35, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2)
pPor <- searchrates("Porto")+
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="purple", size = I(2), alpha = 0.2) +
theme(axis.text.y = element_blank())
pEvo <- searchrates("Evora")+
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2)+
theme(axis.text.y = element_blank())
multiplot(pTol, pPor, pEvo, cols = 3)
tiff("../Results/SchoolField/combineda2.tiff", width = 60, height = 20, units = 'cm', res = 300, compression = 'lzw')
multiplot(pTol, pPor, pEvo, cols = 3)
dev.off()
