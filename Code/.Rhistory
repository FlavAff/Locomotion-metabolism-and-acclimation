library(ggplot2)
library(data.table)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model1, aes(x = Temperature, y = d1+0.02), size = I(2), alpha = 0.7, colour = "orange", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1), size = I(2), alpha = 1, colour = "darkgreen", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1-0.02), size = I(2), alpha = 1, colour = "lightgreen", linetype = "dotted") +
theme(axis.title = element_blank())
setwd("~/GitHub/Locomotion-metabolism-and-acclimation/Code/")
source("Schoolfields2.R")
k <- 8.617*(10^-5)
Tempe <- seq(from=273.15, to = 328.15, by = 0.5)
Masss <- seq(from = 0.2, to = 1.2, length.out = length(Tempe))
#get the predicted values for all models
d1 <- SchoolfieldM(B0 = 0.4,
b = 0.75,
m = Masss,
E = 0.65,
Ed = 2.5,
TempH = 35+273.15,
Temp = Tempe)
dV <- SchoolfieldM(B0 = 0.6,
b = 0.75,
m = Masss,
E = 0.65,
Ed = 2.5,
TempH = 35+273.15,
Temp = Tempe)
dE <- SchoolfieldM(B0 = 0.4,
b = 0.75,
m = Masss,
E = 0.85,
Ed = 2.5,
TempH = 35+273.15,
Temp = Tempe)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model1, aes(x = Temperature, y = d1+0.02), size = I(2), alpha = 0.7, colour = "orange", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1), size = I(2), alpha = 1, colour = "darkgreen", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1-0.02), size = I(2), alpha = 1, colour = "lightgreen", linetype = "dotted") +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "Original \n 'match'", size = 10)
p <- p + annotate("text", x = 15, y = -2, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 13, y = -2.4, label = "Prey B", size = 10, colour = "lightgreen")
p <- p + annotate("text", x = 5, y = -1.5, label = "Predator", size = 10, colour = "orange")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=5, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p6 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model1, aes(x = Temperature, y = d1+0.02), size = I(2), alpha = 0.7, colour = "orange", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1), size = I(2), alpha = 1, colour = "darkgreen", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1-0.02), size = I(2), alpha = 1, colour = "lightgreen", linetype = "dotted") +
theme(axis.title = element_blank())
#create plottable data
Model1 <- data.frame(Temperature, d1)
Model2 <- data.frame(Temperature, dV)
Model3 <- data.frame(Temperature, dE)
Temperature <- seq(from = 0, to = 55, length.out = length(d1))
Temperature2 <- seq(from = 10, to = 60, length.out = length(d1))
#create plottable data
Model1 <- data.frame(Temperature, d1)
Model2 <- data.frame(Temperature, dV)
Model3 <- data.frame(Temperature, dE)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model1, aes(x = Temperature, y = d1+0.02), size = I(2), alpha = 0.7, colour = "orange", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1), size = I(2), alpha = 1, colour = "darkgreen", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1-0.02), size = I(2), alpha = 1, colour = "lightgreen", linetype = "dotted") +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "Original \n 'match'", size = 10)
p <- p + annotate("text", x = 15, y = -2, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 13, y = -2.4, label = "Prey B", size = 10, colour = "lightgreen")
p <- p + annotate("text", x = 5, y = -1.5, label = "Predator", size = 10, colour = "orange")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=5, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p6 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
print(p6)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 0.7, colour = "orange") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
geom_line(data = Model3, aes(x = Temperature, y = dE), size = I(2), alpha = 0.7, colour = "lightgreen") +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "New \n 'mismatch'", size = 10)
p <- p + annotate("text", x = 5, y = -1, label = "Predator", size = 10, colour = "orange")
p <- p + annotate("text", x = 20, y = -2.5, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 45, y = 1, label = "Prey B", size = 10, colour = "lightgreen")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=5, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p7 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
print(p7)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 0.7, colour = "orange") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
geom_line(data = Model3, aes(x = Temperature, y = dE), size = I(2), alpha = 0.7, colour = "lightgreen") +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "New \n 'mismatch'", size = 10)
p <- p + annotate("text", x = 5, y = -1, label = "Predator", size = 10, colour = "orange")
p <- p + annotate("text", x = 20, y = -2.5, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 45, y = 1, label = "Prey B", size = 10, colour = "lightgreen")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p7 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
print(p7)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 0.7, colour = "orange") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
geom_line(data = Model3, aes(x = Temperature, y = dE), size = I(2), alpha = 0.7, colour = rgb(.5,1,.5)) +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "New \n 'mismatch'", size = 10)
p <- p + annotate("text", x = 5, y = -1, label = "Predator", size = 10, colour = "orange")
p <- p + annotate("text", x = 20, y = -2.5, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 45, y = 1, label = "Prey B", size = 10, colour = "lightgreen")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p7 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
print(p7)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 0.7, colour = "orange") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
geom_line(data = Model3, aes(x = Temperature, y = dE), size = I(2), alpha = 0.7, colour = rgb(1,1,.5)) +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "New \n 'mismatch'", size = 10)
p <- p + annotate("text", x = 5, y = -1, label = "Predator", size = 10, colour = "orange")
p <- p + annotate("text", x = 20, y = -2.5, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 45, y = 1, label = "Prey B", size = 10, colour = "lightgreen")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p7 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
print(p7)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 0.7, colour = "orange") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
geom_line(data = Model3, aes(x = Temperature, y = dE), size = I(2), alpha = 0.7, colour = rgb(.7,1,.5)) +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "New \n 'mismatch'", size = 10)
p <- p + annotate("text", x = 5, y = -1, label = "Predator", size = 10, colour = "orange")
p <- p + annotate("text", x = 20, y = -2.5, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 45, y = 1, label = "Prey B", size = 10, colour = "lightgreen")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p7 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
print(p7)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 0.7, colour = "orange") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
geom_line(data = Model3, aes(x = Temperature, y = dE), size = I(2), alpha = 0.7, colour = rgb(.2,1,.5)) +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "New \n 'mismatch'", size = 10)
p <- p + annotate("text", x = 5, y = -1, label = "Predator", size = 10, colour = "orange")
p <- p + annotate("text", x = 20, y = -2.5, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 45, y = 1, label = "Prey B", size = 10, colour = "lightgreen")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p7 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
print(p7)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 0.7, colour = "orange") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
geom_line(data = Model3, aes(x = Temperature, y = dE), size = I(2), alpha = 0.7, colour = rgb(.1,1,.5)) +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "New \n 'mismatch'", size = 10)
p <- p + annotate("text", x = 5, y = -1, label = "Predator", size = 10, colour = "orange")
p <- p + annotate("text", x = 20, y = -2.5, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 45, y = 1, label = "Prey B", size = 10, colour = "lightgreen")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p7 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
print(p7)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 0.7, colour = "orange") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
geom_line(data = Model3, aes(x = Temperature, y = dE), size = I(2), alpha = 0.7, colour = rgb(.1,1,.5)) +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "New \n 'mismatch'", size = 10)
p <- p + annotate("text", x = 5, y = -1, label = "Predator", size = 10, colour = "orange")
p <- p + annotate("text", x = 20, y = -2.5, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 45, y = 1, label = "Prey B", size = 10, colour = rgb(.1,1,.5))
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p7 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
print(p7)
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model1, aes(x = Temperature, y = d1+0.02), size = I(2), alpha = 0.7, colour = "orange", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1), size = I(2), alpha = 1, colour = "darkgreen", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1-0.02), size = I(2), alpha = 1, colour = rgb(.1,1,.5), linetype = "dotted") +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "Original \n 'match'", size = 10)
p <- p + annotate("text", x = 15, y = -2, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 13, y = -2.4, label = "Prey B", size = 10, colour = rgb(.1,1,.5))
p <- p + annotate("text", x = 5, y = -1.5, label = "Predator", size = 10, colour = "orange")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p6 <- p + annotate("text", x = 1, y = 1.2, label = "D)", size = 10)
print(p6)
#create plot 2
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model1, aes(x = Temperature, y = d1), size = I(2), alpha = 0.7, colour = "orange", linetype = "dotted") +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 1, colour = "orange") +
theme(axis.title = element_blank()) + geom_point(aes(x = 20, y = -0.63), size = I(5), alpha = 1, colour = "black") +
geom_point(aes(x = 23, y = .1), size = I(5), alpha = 1, colour = "black")
#xlab(expression(paste("Temperature (", degree, C, ")"))) + xlim(0,60) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 12, y = 1.1, label = "Increase in \n performance", size = 10)
#p <- p + annotate("text", x = 50, y = 1.9, label = "Warm adapted \n species", size = 10)
p <- p + annotate("text", x = 1, y = 1.2, label = "A)", size = 10)
p <- p + geom_segment(aes(x=23, xend=23, y=min(d1), yend=.07), size = 2, linetype = "dashed", alpha = 0.5)
p <- p + geom_segment(aes(x=20, xend=20, y=min(d1), yend=-.65), size = 2, linetype = "dashed", alpha = 0.5)
p <- p + ylim(min(d1),1.2)
p2 <- p + annotate("text", x=21, y=.3, label = "b[0]", size=10, parse = TRUE)
#p2 <- p + annotate("text", x = 32, y = 0.1, label = "Cold adapted species", size = 10)
tiff("../Results/ConceptA.tiff", width = 25, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p2)
dev.off()
#create plot 3
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model1, aes(x = Temperature, y = d1), size = I(2), alpha = 0.7, colour = "darkgreen", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 12, y = 1.1, label = "Increase in \n peak temperature", size = 10)
#p <- p + annotate("text", x = 8.5, y = 0.4, label = "Cold adapted \n species", size = 11)
p <- p + annotate("text", x = 1, y = 1.2, label = "B)", size = 10)
p <- p + geom_segment(aes(x=34, xend=44, y=.75, yend=.75), size = 2,
arrow = arrow(length = unit(0.5, "cm")))
#p3 <- p + annotate("text", x = 38, y = 0.05, label = "Warm adapted species", size = 11)
p <- p + ylim(min(d1),1.2)
p3 <- p + annotate("text", x=40, y=.95, label = "T[pk]", size=10, parse = TRUE)
tiff("../Results/ConceptB.tiff", width = 25, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p3)
dev.off()
#create plot 4
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model1, aes(x = Temperature, y = d1), size = I(2), alpha = 0.7, colour = rgb(.1,1,.5), linetype = "dotted") +
geom_line(data = Model2, aes(x = Temperature, y = dE), size = I(2), alpha = 1, colour = rgb(.1,1,.5)) +
theme(axis.title = element_blank())
p <- p + annotate("text", x = 12, y = 1.1, label = "Increase in \n activation energy", size = 10)
p <- p + annotate("text", x = 1, y = 1.2, label = "C)", size = 10)
p <- p + geom_segment(aes(x=17, xend=23, y=-1.1, yend=-.5), size = 2, linetype = "dotted",
arrow = arrow(length = unit(0.5, "cm")))
p <- p + geom_segment(aes(x=17, xend=23, y=-0.65, yend=.2), size = 2,
arrow = arrow(length = unit(0.5, "cm")))
p <- p + ylim(min(d1),1.2)
p4 <- p + annotate("text", x=15, y=-.55, label = "E[a]", size=10, parse = TRUE)
#p2 <- p + annotate("text", x = 32, y = 0.1, label = "Cold adapted species", size = 10)
tiff("../Results/ConceptC.tiff", width = 25, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p4)
dev.off()
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model1, aes(x = Temperature, y = d1+0.02), size = I(2), alpha = 0.7, colour = "orange", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1), size = I(2), alpha = 1, colour = "darkgreen", linetype = "dotted") +
geom_line(data = Model1, aes(x = Temperature, y = d1-0.02), size = I(2), alpha = 1, colour = rgb(.1,1,.5), linetype = "dotted") +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "Original \n 'match'", size = 10)
p <- p + annotate("text", x = 15, y = -2, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 13, y = -2.4, label = "Prey B", size = 10, colour = rgb(.1,1,.5))
p <- p + annotate("text", x = 5, y = -1.5, label = "Predator", size = 10, colour = "orange")
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p6 <- p + annotate("text", x = 1, y = 1.2, label = "D)", size = 10)
tiff("../Results/ConceptD.tiff", width = 25, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p6)
dev.off()
p <- ggplot() + theme_classic() +
theme(axis.title=element_text(size=28,face="bold"), axis.text=element_blank()) +
geom_line(data = Model2, aes(x = Temperature, y = dV), size = I(2), alpha = 0.7, colour = "orange") +
geom_line(data = Model1, aes(x = Temperature2, y = d1), size = I(2), alpha = 1, colour = "darkgreen") +
geom_line(data = Model3, aes(x = Temperature, y = dE), size = I(2), alpha = 0.7, colour = rgb(.1,1,.5)) +
theme(axis.title = element_blank())
#xlab(expression(paste("Temperature (", degree, C, ")"))) +
#ylab(expression(paste("Oxygen Consumption (",mu,"mol/h)"))) #+ ylim(0,1.25)
p <- p + annotate("text", x = 9, y = 1.1, label = "New \n 'mismatch'", size = 10)
p <- p + annotate("text", x = 5, y = -1, label = "Predator", size = 10, colour = "orange")
p <- p + annotate("text", x = 20, y = -2.5, label = "Prey A", size = 10, colour = "darkgreen")
p <- p + annotate("text", x = 45, y = 1, label = "Prey B", size = 10, colour = rgb(.1,1,.5))
p <- p + ylim(min(d1),1.2)
p <- p + geom_rect(aes(xmin=0, xmax=33, ymin=min(d1), ymax=Inf), size = I(2), alpha = 0.1)
p7 <- p + annotate("text", x = 1, y = 1.2, label = "E)", size = 10)
tiff("../Results/ConceptE.tiff", width = 25, height = 20, units = 'cm', res = 300, compression = 'lzw')
print(p7)
dev.off()
rm(list = ls())
dev.off()
library(plyr)
library(minpack.lm)
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("~/GitHub/Locomotion-metabolism-and-acclimation/Code/")
dat <- read.csv("../Results/SchoolField/Revised/UsedValuesMean.csv")
#dat$Site.April.mean.temp <- round(dat$Site.April.mean.temp, digits = 1)
#dat[12,5]<-"11.0"
#dat$Site.April.mean.temp <- as.factor(dat$Site.April.mean.temp)
#dat$Site.April.mean.temp <- factor(dat$Site.April.mean.temp, levels= c("7.3", "11.0", "12.7", "13.5", "14.9", "16.2"))
dat$site <- factor(dat$site, levels = c("Jaca","Penalara","Porto","Toledo","Evora","Murcia"))
colours <- c("darkgreen",rgb(.1,1,.5),"orange")
p <- ggplot(data = dat, aes(x = site, y = B0_end)) + geom_point(aes(color=Genus, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=22)) + ylab(expression(paste("B0 (",mu,"mol/mgL)"))) +
xlab("Mean Site Temperature (Â°C)") + theme(axis.text=element_text(size=15))
p <- p + geom_errorbar(aes(ymin = B0_end - 1.96*B0_se, ymax = B0_end + 1.96*B0_se, color = Genus, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p1 <- p + facet_grid( .~ Genus, scales = "free", space = "free")
p1
p <- ggplot(data = dat, aes(x = site, y = B0_end)) + geom_point(aes(color=Genus, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=22)) + ylab(expression(paste("B0 (",mu,"mol/mgL)"))) +
xlab("Site") + theme(axis.text=element_text(size=15))
p <- p + geom_errorbar(aes(ymin = B0_end - 1.96*B0_se, ymax = B0_end + 1.96*B0_se, color = Genus, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p1 <- p + facet_grid( .~ Genus, scales = "free", space = "free")
p1
p <- ggplot(data = dat, aes(x = site, y = Ea_end)) + geom_point(aes(color=Genus, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=22)) + ylab("Ea (eV)") +
xlab("Site") + theme(axis.text=element_text(size=15))
p <- p + geom_errorbar(aes(ymin = Ea_end - 1.96*Ea_se, ymax = Ea_end + 1.96*Ea_se, color = Genus, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p2 <- p + facet_grid( .~ Genus, scales = "free", space = "free")
p2
p <- ggplot(data = dat, aes(x = site, y = (Tpk_end-273.15))) + geom_point(aes(color=Genus, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=22)) + ylab("Tpk (Â°C)") +
xlab("Site") + theme(axis.text=element_text(size=15))
p <- p + geom_errorbar(aes(ymin = (Tpk_end - 1.96*Tpk_se)-273.15, ymax = (Tpk_end + 1.96*Tpk_se)-273.15, color = Genus, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p3 <- p + facet_grid( .~ Genus, scales = "free", space = "free")
p3
p <- ggplot(data = dat, aes(x = site, y = (Tpk_end-273.15))) + geom_point(aes(color=Genus, shape=Genus),size=I(4)) +
#geom_line(aes(group=Genus, color=Genus)) +
theme_classic() + theme(axis.title=element_text(size=22)) + ylab("Tpk (°C)") +
xlab("Site") + theme(axis.text=element_text(size=15))
p <- p + geom_errorbar(aes(ymin = (Tpk_end - 1.96*Tpk_se)-273.15, ymax = (Tpk_end + 1.96*Tpk_se)-273.15, color = Genus, width=.2))
p <- p + theme(strip.text.x = element_text(size = 17, face = 'italic')) + theme(legend.position = "none")
p <- p + scale_colour_manual(name="Genus", values=colours)
p3 <- p + facet_grid( .~ Genus, scales = "free", space = "free")
p3
tiff("../Results/SchoolField/Revised/B0Points.tiff", width = 15, height = 10, units = 'cm', res = 300, compression = 'lzw')
print(p1)
dev.off()
tiff("../Results/SchoolField/Revised/EaPoints.tiff", width = 15, height = 10, units = 'cm', res = 300, compression = 'lzw')
print(p2)
dev.off()
tiff("../Results/SchoolField/Revised/TpkPoints.tiff", width = 15, height = 10, units = 'cm', res = 300, compression = 'lzw')
print(p3)
dev.off()
############################################################
source("multiplot.R")
p1 <- p1 + theme(axis.title.x=element_blank())
p2 <- p2 + theme(axis.title.x=element_blank())
p3 <- p3 + theme(axis.title.x=element_blank())
tiff("../Results/SchoolField/Revised/combinedPoints.tiff", width = 25, height = 40, units = 'cm', res = 300, compression = 'lzw')
#multiplot(p1,p2,p3, labs=list("Genus",""), cols = 3)
multiplot(p1,p3,p2, cols = 1)
dev.off()
tiff("../Results/SchoolField/Revised/combinedPoints.tiff", width = 30, height = 40, units = 'cm', res = 300, compression = 'lzw')
#multiplot(p1,p2,p3, labs=list("Genus",""), cols = 3)
multiplot(p1,p3,p2, cols = 1)
dev.off()
rm(list = ls())
dev.off()
library(plyr)
library(minpack.lm)
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("~/GitHub/Locomotion-metabolism-and-acclimation/Code/")
source("DataClean.R")
rm(list=setdiff(ls(), c("chir","dipt","strio","k")))
source("Schoolfields2.R")
source("plot_functions.R")
source("further_models_fun.R")
source("multiplot.R")
values <- read.csv("../Results/SchoolField/Revised/UsedValuesMean.csv")
values$site <- factor(values$site, levels = c("Penalara","Jaca","Toledo","Evora","Porto","Murcia"))
#get the parameter values per species for the functions
chir_values <- subset(values, values$Genus == "Chironomus")
dipt_values <- subset(values, values$Genus == "Cloeon")
stri_values <- subset(values, values$Genus == "Sympetrum")
Plot_two_curves_v0 <- function(spp1,spp2,locations,spp1_values,spp2_values,GCOT1,GCOT2,m1,m2,preycol){
for (i in locations){
#get the predicted values for both models
Tempe <- seq(from=283.15, to = 318.15, by = 0.5)
Masss2 <- seq(from = as.numeric(min(spp2[spp2$site == i,]$Mass)), to = as.numeric(max(spp2[spp2$site == i,]$Mass)), length.out = length(Tempe))
d1 <- SchoolfieldNo(B0 = spp1_values[spp1_values$site == i,]$B0_end,
E = spp1_values[spp1_values$site == i,]$Ea_end,
Ed = spp1_values[spp1_values$site == i,]$Ed_end,
TempH = spp1_values[spp1_values$site == i,]$Tpk_end,
#TempN = spp1_values[spp1_values$site == i,]$Site.April.median.temp + 273.15,
Temp = Tempe)
d2 <- SchoolfieldM(B0 = spp2_values[spp2_values$site == i,]$B0_end,
b = spp2_values[spp2_values$site == i,]$b,
m = Masss2,
E = spp2_values[spp2_values$site == i,]$Ea_end,
Ed = spp2_values[spp2_values$site == i,]$Ed_end,
TempH = spp2_values[spp2_values$site == i,]$Tpk_end,
#TempN = spp2_values[spp2_values$site == i,]$Site.April.median.temp + 273.15,
Temp = Tempe)
Temperature <- seq(from = 10, to = 45, length.out = length(d1))
d1 <- 0.3*Vopt(power(d1),m1,GCOT1)
d2 <- 0.3*Vopt(power(d2),m2,GCOT2)
#create plottable data
Model1 <- data.frame(Temperature, exp(d1))
Model2 <- data.frame(Temperature, exp(d2))
p <- ggplot() + theme_classic() + ylim(0,1.5) +
theme(axis.title=element_text(size=22)) +
geom_line(data = Model1, aes(x = Temperature, y = exp(d1), colour = spp1$genus[1]), size = I(2), alpha = 0.7) +
xlab(expression(paste("Temperature (", degree, C, ")"))) +
ylab(expression(paste("Speed (m/s)")))
p <- p + geom_line(data = Model2, aes(x = Temperature, y = exp(d2), colour = spp2$genus[1]), size = I(2), alpha = 0.7)
#p <- p + scale_color_discrete(name = "Genus") #+ ggtitle(paste("Predator - Prey TPCs from",i)) +
if (locations == "Evora" && preycol == "darkgreen"){
p <- p + ggtitle("Warm site (Evora)") + theme(title=element_text(size=18)) + theme(plot.title = element_text(hjust=.5))
}
p <- p + scale_colour_manual(name="Genus", values=c(preycol,"orange"))
p <- p + theme(legend.text=element_text(size=17)) + theme(legend.title=element_text(size=20)) + theme(axis.text=element_text(size=15))
#theme(plot.title = element_text(face="bold"))
#open the pdf and put the plot in it
#pdf(paste0("../Results/SchoolField/Revised/VS",i,spp2$genus[1],"SchoolTPCsv0.pdf"))
#print(p)
#dev.off()
return(p)
#print(paste("difference in b0 for",i,exp(d1)-exp(d2)))
}
}
#get values for v0 transformation
chir_GCOT <- GCOT(mean(chir$Mass)/1000)
dipt_GCOT <- GCOT(mean(dipt$Mass)/1000)
stri_GCOT <- GCOT(mean(strio$Mass)/1000)
chir_m <- mean(chir$Mass)/1000
dipt_m <- mean(dipt$Mass)/1000
stri_m <- mean(strio$Mass)/1000
#plot the predator-prey velocity curves
pTolCh <- Plot_two_curves_v0(spp1 = strio,spp2 = chir,locations = c("Porto"),stri_values,chir_values,stri_GCOT,chir_GCOT,stri_m,chir_m,"darkgreen")
#remeber to unhash function to get title on plot here:
pEvoCh <- Plot_two_curves_v0(spp1 = strio,spp2 = chir,locations = c("Evora"),stri_values,chir_values,stri_GCOT,chir_GCOT,stri_m,chir_m,"darkgreen")
pTolCl <- Plot_two_curves_v0(spp1 = strio,spp2 = dipt,locations = c("Porto"),stri_values,dipt_values,stri_GCOT,dipt_GCOT,stri_m,dipt_m,rgb(.1,1,.5))
pEvoCl <- Plot_two_curves_v0(spp1 = strio,spp2 = dipt,locations = c("Evora"),stri_values,dipt_values,stri_GCOT,dipt_GCOT,stri_m,dipt_m,rgb(.1,1,.5))
#modify plots befor multiplot run
pTolCh <- pTolCh + ggtitle("Cool site (Porto)") + theme(title=element_text(size=18)) + theme(plot.title = element_text(hjust=.5)) +
theme(axis.title.x=element_blank()) + theme(legend.position = "none") + theme(axis.title.y=element_blank()) +
#theme(plot.margin=unit(c(0.5,1.5,1,4),"cm")) +
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2)
pEvoCh <- pEvoCh + theme(axis.title.x=element_blank()) + theme(axis.title.y=element_blank())+
#theme(plot.margin=unit(c(0.5,0.5,1,1),"cm")) +
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2)
pTolCl <- pTolCl + theme(legend.position = "none") + theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank()) + #theme(plot.margin=unit(c(0.5,1.5,1.5,4),"cm")) +
geom_rect(aes(xmin=10, xmax=24.992, ymin=-Inf, ymax=Inf), fill="blue", size = I(2), alpha = 0.2)
pEvoCl <- pEvoCl + theme(axis.title.y=element_blank()) + theme(axis.title.x=element_blank())+
#theme(plot.margin=unit(c(0.5,0.5,1.5,1),"cm")) +
geom_rect(aes(xmin=10, xmax=30.192, ymin=-Inf, ymax=Inf), fill="red", size = I(2), alpha = 0.2)
pEvoCh <- pEvoCh + theme(legend.position = "none")
pEvoCl <- pEvoCl + theme(legend.position = "none")
print(pTolCh)
print(pTolCl)
print(pEvoCh)
print(pEvoCl)
tiff("../Results/SchoolField/Revised/V0PorCh.tiff", width = 15, height = 15, units = 'cm', res = 300, compression = 'lzw')
print(pTolCh)
dev.off()
tiff("../Results/SchoolField/Revised/V0PorCl.tiff", width = 15, height = 15, units = 'cm', res = 300, compression = 'lzw')
print(pTolCl)
dev.off()
tiff("../Results/SchoolField/Revised/V0EvoCh.tiff", width = 15, height = 15, units = 'cm', res = 300, compression = 'lzw')
print(pEvoCh)
dev.off()
tiff("../Results/SchoolField/Revised/V0EvoCl.tiff", width = 15, height = 15, units = 'cm', res = 300, compression = 'lzw')
print(pEvoCl)
dev.off()
